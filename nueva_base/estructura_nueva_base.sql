
#----------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------

drop database iess;
create database iess;

CREATE TABLE IF NOT EXISTS `rol` (
 `CARGO` int(5) NOT NULL,
 `NOMBRE_CARGO` varchar(50) NOT NULL,
  PRIMARY KEY (CARGO)
 
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS `personal_medico` (
  `ID_PERSONALMEDICO` bigint(20) NOT NULL,
  `CED_PERSONAL` bigint(12) NOT NULL,
  `CODIGO_AS400` varchar(30) NOT NULL,
  `NOM_PERSONAL` varchar(30) NOT NULL,
  `APE_PERSONAL` varchar(30) NOT NULL,
  `CARGO` int(5) NOT NULL,
  PRIMARY KEY (ID_PERSONALMEDICO),
  INDEX(CARGO),
  UNIQUE(CED_PERSONAL),
  UNIQUE(CODIGO_AS400),
  FOREIGN KEY (CARGO) REFERENCES rol(CARGO)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS `usuarios` (
  `ID_USUARIO` bigint(20) NOT NULL,
  `ID_PERSONALMEDICO` bigint(20) DEFAULT NULL,
  `USUARIO` varchar(30) NOT NULL,
  `PASSWORD` varchar(150) NOT NULL,
  `FEC_CREACION` date NOT NULL,
   PRIMARY KEY (ID_USUARIO),
   INDEX (ID_PERSONALMEDICO),
   UNIQUE(USUARIO),
   FOREIGN KEY (ID_PERSONALMEDICO) REFERENCES personal_medico(ID_PERSONALMEDICO)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS `pacientes` (
  `ID_PACIENTE` bigint(20) NOT NULL,
  `CED_PERSONAL` bigint(12) DEFAULT NULL,
  `HIST_CLINICA` bigint(20) NOT NULL,
  `NOM_PACIENTE` varchar(60) NOT NULL,
  `APELLIDO_PACIENTE` varchar(60) NOT NULL,
  `EDAD` int(4) DEFAULT NULL,
  `GENERO` varchar(10) DEFAULT NULL,
  PRIMARY KEY (ID_PACIENTE),
  UNIQUE(HIST_CLINICA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS `enfermedad` (
  `ID_ENFERMEDAD` bigint(20) NOT NULL,
  `COD_ENFERMEDAD` varchar(20) NOT NULL,
  `NOM_ENFERMEDAD` varchar(250) NOT NULL,
  `NIV_ENFERMEDAD` varchar(10) NOT NULL,
  `CLA_ENFERMEDAD` varchar(20) NOT NULL,
  PRIMARY KEY (ID_ENFERMEDAD)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS `diagnostico` (
  `ID_DIAGNOSTICO` bigint(20) NOT NULL,
  `ID_PACIENTE` bigint(20) DEFAULT NULL,
  `ID_PERSONALMEDICO` bigint(20) DEFAULT NULL,
  `DIAGNOSTICO_COMENTARIO` varchar(200) NOT NULL,
  `FECHA_DIAGNOSTICO` datetime NOT NULL,
  PRIMARY KEY (ID_DIAGNOSTICO),
  INDEX(ID_PACIENTE),
  INDEX(ID_PERSONALMEDICO),
  FOREIGN KEY (ID_PACIENTE) REFERENCES pacientes(ID_PACIENTE) ON DELETE CASCADE,
  FOREIGN KEY (ID_PERSONALMEDICO) REFERENCES personal_medico(ID_PERSONALMEDICO) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;



CREATE TABLE IF NOT EXISTS `enf_diag` (
  `id_enf_diag` bigint(20) NOT NULL,
  `ID_ENFERMEDAD` bigint(20) NOT NULL,
  `ID_DIAGNOSTICO` bigint(20) NOT NULL,
  `ESTADO` int(2) DEFAULT NULL,
  PRIMARY KEY (id_enf_diag),
  INDEX(ID_ENFERMEDAD),
  INDEX(ID_DIAGNOSTICO),
  FOREIGN KEY (ID_ENFERMEDAD) REFERENCES enfermedad(ID_ENFERMEDAD),
  FOREIGN KEY (ID_DIAGNOSTICO) REFERENCES diagnostico(ID_DIAGNOSTICO) ON DELETE CASCADE

) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;





CREATE TABLE IF NOT EXISTS `antibiotico` (
  `ID_ANTIBIOTICO` bigint(20) NOT NULL,
  `NOMBRE_ANTIBIOTICO` varchar(150) NOT NULL,
  PRIMARY KEY(ID_ANTIBIOTICO)

) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS `antibiotico__basado_en_antibiograma_manual` (
  `ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL` bigint(20) NOT NULL,
  `ID_DIAGNOSTICO` bigint(20) DEFAULT NULL,
  `COMENTARIO` varchar(120) DEFAULT NULL,

   PRIMARY KEY (ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL),
   INDEX(ID_DIAGNOSTICO),
   FOREIGN KEY (ID_DIAGNOSTICO) REFERENCES diagnostico(ID_DIAGNOSTICO)
   ON DELETE CASCADE
  
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS `antibiotico_individual_completo` (
  `id_antibiotico_individual` bigint(20) NOT NULL,
  `ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL` bigint(20) NOT NULL,
  `ID_ANTIBIOTICO` bigint(20) DEFAULT NULL,

  `DOSIS` varchar(120) DEFAULT NULL,
  `unidad` varchar(120) DEFAULT NULL,
  `via` varchar(120) DEFAULT NULL,
  `metodo` varchar(120) DEFAULT NULL,

  
  `INICIO` date NOT NULL,
  `TIEMPO` int(5) NOT NULL,
  `FIN` date NOT NULL,
  
  `ESCALA` varchar(30) NOT NULL,
  `MANTIENE` varchar(30) NOT NULL,
  `DESCALA` varchar(30) NOT NULL,
  `AJUSTE_DOSIS` varchar(30) NOT NULL,
  `EMPIRICO` varchar(30) DEFAULT NULL,

  `ESTADO` int(2) DEFAULT NULL,
  PRIMARY KEY (id_antibiotico_individual),
  INDEX(ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL),
  INDEX(ID_ANTIBIOTICO),
  FOREIGN KEY (ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL) REFERENCES antibiotico__basado_en_antibiograma_manual(ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL)
  ON DELETE CASCADE,
  FOREIGN KEY (ID_ANTIBIOTICO) REFERENCES antibiotico(ID_ANTIBIOTICO)

  
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;





CREATE TABLE IF NOT EXISTS `pedido_examen` (
  `ID_PEDIDO_EXAMEN` bigint(20) NOT NULL,
  `ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL` bigint(20) DEFAULT NULL,
  `TIPO_EXAMEN` varchar(120) DEFAULT NULL,
  `FECHA_PEDIDO` datetime NOT NULL,
  PRIMARY KEY (ID_PEDIDO_EXAMEN),
  INDEX(ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL),
  FOREIGN KEY (ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL) REFERENCES antibiotico__basado_en_antibiograma_manual(ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL)
  ON DELETE CASCADE

 
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS `recepcion_muestra_emocultivo` (
  `ID_RECEPCION_MUESTRA_EMOCULTIVO` bigint(20) NOT NULL,
  `ID_PEDIDO_EXAMEN` bigint(20) DEFAULT NULL,

  `NOMBRE_RESPONSABLE` varchar(150) NOT NULL,
  `FECHA_RECEPCION` datetime NOT NULL,
  `FECH_MUESTRA` datetime NOT NULL,
  `NUME_FRASCOS` int(11) NOT NULL,
  `RESULTADO` varchar(150) NOT NULL,
  
  PRIMARY KEY(ID_RECEPCION_MUESTRA_EMOCULTIVO),
  INDEX(ID_PEDIDO_EXAMEN),
  FOREIGN KEY (ID_PEDIDO_EXAMEN) REFERENCES pedido_examen(ID_PEDIDO_EXAMEN)
  ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;




CREATE TABLE IF NOT EXISTS `tincion_gram` (
  `ID_GRAM` bigint(20) NOT NULL,
  `ID_RECEPCION_MUESTRA_EMOCULTIVO` bigint(20) DEFAULT NULL,
  `FECHA_GRAM` datetime NOT NULL,
  `RESULTDO_GRAM` varchar(130) NOT NULL,
  `ALARMA` tinyint(1) DEFAULT NULL,
  PRIMARY KEY(ID_GRAM),
  INDEX(ID_RECEPCION_MUESTRA_EMOCULTIVO),
  FOREIGN KEY (ID_RECEPCION_MUESTRA_EMOCULTIVO) REFERENCES recepcion_muestra_emocultivo(ID_RECEPCION_MUESTRA_EMOCULTIVO)
  ON DELETE CASCADE

) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS `notificaciones` (
  `id_notificacion` bigint(20) NOT NULL,
  `ID_GRAM` bigint(20) NOT NULL,
  `alarma` int(1) NOT NULL,
  `estado` int(1) NOT NULL,
  PRIMARY KEY(id_notificacion),
  INDEX(ID_GRAM),
  FOREIGN KEY (ID_GRAM) REFERENCES tincion_gram(ID_GRAM)  
  ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS `bacteria` (
  `ID_BACTERIA` bigint(20) NOT NULL,
  `NOM_BACTERIA` varchar(240) NOT NULL,
  PRIMARY KEY(ID_BACTERIA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;






CREATE TABLE IF NOT EXISTS `tecnica_antibiograma` (
  `ID_ANTIBIOGRAMA` bigint(20) NOT NULL,
  `ID_BACTERIA` bigint(20) DEFAULT NULL,
  `FENOTIPO` varchar(120) DEFAULT NULL,
  `FECHA_ANTIBIOGRAMA` date NOT NULL,
  `REPORTE_ACRODE_A_GUIA` varchar(130) NOT NULL,
  `OBSERVACION_ANTIBIOGRAMA` varchar(210) NOT NULL,
  PRIMARY KEY(ID_ANTIBIOGRAMA),
  INDEX(ID_BACTERIA),
  FOREIGN KEY (ID_BACTERIA) REFERENCES bacteria(ID_BACTERIA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;



CREATE TABLE IF NOT EXISTS `tecnica_eplex` (
  `ID_EPLEX` bigint(20) NOT NULL,
  `ID_BACTERIA` bigint(20) DEFAULT NULL,
  `MEC_RESISTENCIA` varchar(120) DEFAULT NULL,
  `FECHA_EPLEX` date NOT NULL,
  `OBSERVACION_EPLEX` varchar(210) NOT NULL,
  PRIMARY KEY(ID_EPLEX),
  INDEX(ID_BACTERIA),
  FOREIGN KEY (ID_BACTERIA) REFERENCES bacteria(ID_BACTERIA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS `tecnica_array` (
  `ID_ARRAY` bigint(20) NOT NULL,
  `ID_BACTERIA` bigint(20) DEFAULT NULL,
  `GEN_RESISTENCIA` varchar(40) NOT NULL,
  `FECHA_ARRAY` date NOT NULL,
  `OBSERVACION_ARRAY` varchar(210) NOT NULL,
  PRIMARY KEY(ID_ARRAY),
  INDEX(ID_BACTERIA),
  FOREIGN KEY (ID_BACTERIA) REFERENCES bacteria(ID_BACTERIA)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;



CREATE TABLE IF NOT EXISTS `tecnicas` (
  `ID_TECNICAS` bigint(20) NOT NULL,
  `ID_GRAM` bigint(20) NOT NULL,
  `ID_ANTIBIOGRAMA` bigint(20) DEFAULT NULL,
  `ID_EPLEX` bigint(20) DEFAULT NULL,
  `ID_ARRAY` bigint(20) DEFAULT NULL,
  `ESTADO` int(2) DEFAULT NULL,
  `FECHA_TECNICAS` datetime DEFAULT NULL,
  
  PRIMARY KEY(ID_TECNICAS),
  INDEX(ID_ANTIBIOGRAMA),
  INDEX(ID_EPLEX),
  INDEX(ID_ARRAY),
  FOREIGN KEY (ID_GRAM) REFERENCES tincion_gram(ID_GRAM) ON DELETE CASCADE,
  FOREIGN KEY (ID_ANTIBIOGRAMA) REFERENCES tecnica_antibiograma (ID_ANTIBIOGRAMA),
  FOREIGN KEY (ID_EPLEX) REFERENCES tecnica_eplex (ID_EPLEX),
  FOREIGN KEY (ID_ARRAY) REFERENCES tecnica_array (ID_ARRAY)

) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


##vista


CREATE OR REPLACE view v_diagnostico AS
SELECT  concat(pa.NOM_PACIENTE,' ',pa.APELLIDO_PACIENTE) paciente,pa.HIST_CLINICA, concat(pm.NOM_PERSONAL,' ',pm.APE_PERSONAL) medico,px.ID_PEDIDO_EXAMEN,px.TIPO_EXAMEN,px.FECHA_PEDIDO
FROM
diagnostico d, personal_medico pm, pacientes  pa, antibiotico__basado_en_antibiograma_manual abam, pedido_examen px
WHERE
d.ID_PACIENTE = pa.ID_PACIENTE AND
d.ID_PERSONALMEDICO = pm.ID_PERSONALMEDICO AND
d.ID_DIAGNOSTICO = abam.ID_DIAGNOSTICO AND
abam.ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL = px.ID_ANTIBIOTICO_BASADO_EN_ANTIBIOGRAMA_MANUAL;




#----cargar usuarios para login
#---------------------------------------------------------------------------
INSERT INTO `rol`(`CARGO`, `NOMBRE_CARGO`) VALUES (1,'Administrador');
INSERT INTO `rol`(`CARGO`, `NOMBRE_CARGO`) VALUES (2,'Médico');
INSERT INTO `rol`(`CARGO`, `NOMBRE_CARGO`) VALUES (3,'Laboratorio');

INSERT INTO `personal_medico` (`ID_PERSONALMEDICO`, `CED_PERSONAL`, `CODIGO_AS400`, `NOM_PERSONAL`, `APE_PERSONAL`, `CARGO`) 
	VALUES ('10', '1234567890', '667', 'Alexander ', 'Perez', 1);
INSERT INTO `usuarios` (`ID_USUARIO`, `ID_PERSONALMEDICO`, `USUARIO`, `PASSWORD`, `FEC_CREACION`) 
	VALUES ('111', '10', '1234567890', '21232F297A57A5A743894A0E4A801FC3' , '2022-03-09');
#doctor 1111111111,2222222222
INSERT INTO `personal_medico` (`ID_PERSONALMEDICO`, `CED_PERSONAL`, `CODIGO_AS400`, `NOM_PERSONAL`, `APE_PERSONAL`, `CARGO`)
	VALUES ('20', '1111111111', '668', 'Fabián ', 'Rodriguez', 2);
INSERT INTO `usuarios` (`ID_USUARIO`, `ID_PERSONALMEDICO`, `USUARIO`, `PASSWORD`, `FEC_CREACION`) 
	VALUES ('112', '20', '1111111111', '21232F297A57A5A743894A0E4A801FC3' , '2022-03-09');

INSERT INTO `personal_medico` (`ID_PERSONALMEDICO`, `CED_PERSONAL`, `CODIGO_AS400`, `NOM_PERSONAL`, `APE_PERSONAL`, `CARGO`)
	VALUES ('30', '2222222222', '669', 'Yaiza ', 'Sala', 2);
INSERT INTO `usuarios` (`ID_USUARIO`, `ID_PERSONALMEDICO`, `USUARIO`, `PASSWORD`, `FEC_CREACION`) 
	VALUES ('113', '30', '2222222222', '21232F297A57A5A743894A0E4A801FC3' , '2022-03-09');

#laboratorio 3333333333, 4444444444

INSERT INTO `personal_medico` (`ID_PERSONALMEDICO`, `CED_PERSONAL`, `CODIGO_AS400`, `NOM_PERSONAL`, `APE_PERSONAL`, `CARGO`)
	VALUES ('40', '3333333333', '6610', 'Ovidio ', 'Sola', 3);
INSERT INTO `usuarios` (`ID_USUARIO`, `ID_PERSONALMEDICO`, `USUARIO`, `PASSWORD`, `FEC_CREACION`) 
	VALUES ('114', '40', '3333333333', '21232F297A57A5A743894A0E4A801FC3' , '2022-03-09');

INSERT INTO `personal_medico` (`ID_PERSONALMEDICO`, `CED_PERSONAL`, `CODIGO_AS400`, `NOM_PERSONAL`, `APE_PERSONAL`, `CARGO`)
	VALUES ('50', '4444444444', '6611', 'Asdrubal ', 'Rueda', 3);
INSERT INTO `usuarios` (`ID_USUARIO`, `ID_PERSONALMEDICO`, `USUARIO`, `PASSWORD`, `FEC_CREACION`) 
	VALUES ('115', '50', '4444444444', '21232F297A57A5A743894A0E4A801FC3' , '2022-03-09');



INSERT INTO `pacientes`(`ID_PACIENTE`, `HIST_CLINICA`, `NOM_PACIENTE`, `APELLIDO_PACIENTE`, `EDAD`, `GENERO`) VALUES (123,333,'Marco','Pupiales',23,'Masculino');






